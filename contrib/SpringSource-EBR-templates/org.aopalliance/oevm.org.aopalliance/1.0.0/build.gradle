apply plugin: 'base'
apply plugin: 'java'
apply plugin: 'eclipse'

version = '1.0'

repositories {
    mavenCentral()
    maven { url "http://build.eclipse.org/rt/virgo/maven/bundles/release" }
    maven { url "http://repository.springsource.com/maven/bundles/external" }
}

configurations {
    bundlorRuntime

    sourceBundle
}

dependencies {
    bundlorRuntime('org.eclipse.virgo.bundlor:org.eclipse.virgo.bundlor.commandline:1.1.2.RELEASE')
    // { exclude module: 'com.springsource.org.objectweb.asm.commons-3.1.0.jar' }
    bundlorRuntime('org.eclipse.virgo.bundlor:org.eclipse.virgo.bundlor:1.1.2.RELEASE') 
    // { exclude module: 'com.springsource.org.objectweb.asm.commons-3.1.0.jar'  }
    bundlorRuntime('org.eclipse.virgo.bundlor:org.eclipse.virgo.bundlor.blint:1.1.2.RELEASE')
    /*
     {
        exclude module: 'com.springsource.slf4j.nop'
        exclude module: 'com.springsource.slf4j.api'
        exclude module: 'com.springsource.org.objectweb.asm.commons-3.1.0.jar'
    }
     */
    /*
     exclude module: 'cglib' //by artifact name
     exclude group: 'org.jmock' //by group
     exclude group: 'org.unwanted', module: 'iAmBuggy' //by both name and group
     */

    sourceBundle group: 'aopalliance', name: 'aopalliance', version: '1.0'
}

eclipse {
    jdt {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
    }
}

task bundlorExec(type: JavaExec) {

    file(project.buildDir).mkdir()

    def File outputDir = file(project.buildDir)

    def inputSource

    project.configurations.sourceBundle.each {
        logger.debug "Using source bundle: " + it
        inputSource = it
    }
    logger.info "Creating OSGi bundle from " + inputSource

    classpath = configurations.bundlorRuntime

    main = 'org.eclipse.virgo.bundlor.commandline.Bundlor'
    args '-i', inputSource
    args '-m', 'oevm.org.aopalliance.mf'
    args '-o', new File(outputDir, "org.aopalliance-1.0.jar")
}

task wrapper(type: Wrapper) { gradleVersion = '2.10' }
